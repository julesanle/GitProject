apply plugin: 'com.android.application'
//添加 com.sensorsdata.analytics.android 插件
//apply plugin: 'com.sensorsdata.analytics.android'
//apply from: 'tinker-support.gradle'

android {
    compileSdkVersion cfgs.compileSdkVersion
    defaultConfig {
      /*  splits {

            abi {
                enable true reset() include 'x86', 'armeabi-v7a', 'x86_64'
                universalApk true
            }
        }*/



        applicationId "com.yanxiu.ruixuetang"
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion

        versionCode 30
        versionName "1.3.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64", "x86"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // bugly recommend
    dexOptions {
        jumboMode = true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    signingConfigs {
        myConfig {
            storeFile file('yxstudent.keystore')
            storePassword "yanxiusrt1qaz@wsx"
            keyAlias "zuoyebaoandroid.keystore"
            keyPassword "yanxiusrt1qaz@wsx"
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //参数说明
            manifestPlaceholders = [
                    //dev
//                        GETUI_APP_ID    : "Riw2lQ0vEQ9iEv8ADs2Qg5", //APP_ID
//                        GETUI_APP_KEY   : "fpq9FFbGLB8zpLkwCO1oQA",   //APP_KEY
//                        GETUI_APP_SECRET: "PiNzRvizni8i4Enu1HYuh7",   //APPSECRET

                    GETUI_APP_ID    : "VKUOZXhFCB7GevG6yfQXE1", //APP_ID
                    GETUI_APP_KEY   : "xSFRKbsdKmALW38Bvvx0U6",   //APP_KEY
                    GETUI_APP_SECRET: "ulxmindW6P7FjCx0xhVSz1",   //APPSECRET
            ]
            //APP_ID、APP_KEY、APP_SECRET请根据个推开发者后台申请到的应用参数进行相应替换

            resValue "string", "build_time", "${buildTime()}--debug"

            //测试包默认渠道other
            resValue "string", "app_channel", "other"

            //测试服务器地址，可配置到gradle.properties中去
            resValue "string", "api_server_url", "http://api-dev.3ren.cn"
            resValue "string", "server_url", "http://api-dev.3ren.cn/homework-center/app"
            resValue "string", "upload_server_url", "http://dev.hwk.yanxiu.com"
            resValue "string", "mode_for_upload", "dev"
        }

        release {
            minifyEnabled false
            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //参数说明
            manifestPlaceholders = [
                    //realse
//                        GETUI_APP_ID    : "FXeG42IpmI9C9KpKbNPbs1", //APP_ID
//                        GETUI_APP_KEY   : "Gk4NS64CY07lV5mvEB2QT4",   //APP_KEY
//                        GETUI_APP_SECRET: "L3PVLZ2a4Z8v4Bsdzynkx4",   //APPSECRET

                    GETUI_APP_ID    : "xy6JNNaUzP66bUOgoTqom", //APP_ID
                    GETUI_APP_KEY   : "oMgcaCRKRp8secHbF5zveA",   //APP_KEY
                    GETUI_APP_SECRET: "tstl2Ge5Rw76WzOL0vxWz2",   //APPSECRET
            ]
            //APP_ID、APP_KEY、APP_SECRET请根据个推开发者后台申请到的应用参数进行相应替换

            resValue "string", "build_time", "${buildTime()}--release"

            //正式包默认渠道应用宝，此处不要随便修改
            resValue "string", "app_channel", "txyingyongbao"

            //正式服务器地址，此处不要随便修改
            resValue "string", "api_server_url", "https://api.3ren.cn"
            resValue "string", "server_url", "https://api.3ren.cn/homework-center/app"
            resValue "string", "upload_server_url", "http://appadmin.yanxiu.com"
            resValue "string", "mode_for_upload", "release"
        }
    }

    configurations.all {
        resolutionStrategy {
            force "com.android.support:support-v4:${cfgs.androidSupportVersion}"
        }
    }

}

def buildTime() {
    new Date().format('yyyy-MM-dd HH:mm');
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:${cfgs.androidSupportVersion}"
    implementation "com.android.support:design:${cfgs.androidSupportVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:multidex:1.0.3'

    testImplementation "junit:junit:4.12"
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'


    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.getui:sdk:2.12.5.0'
    implementation 'pub.devrel:easypermissions:1.3.0'
    implementation project(':okgo')
    implementation project(path: ':libs:EXueELianNetwork')
    implementation project(path: ':libs:EXueELianRefreshLibrary')

    implementation "com.github.bumptech.glide:glide:${cfgs.glide}"
    implementation 'com.google.android.exoplayer:exoplayer:r2.4.3'

    implementation 'de.hdodenhof:circleimageview:2.2.0'
    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'
    implementation "io.reactivex.rxjava2:rxandroid:${cfgs.rxandroid}"
    implementation "io.reactivex.rxjava2:rxjava:${cfgs.rxjava}"

    implementation project(':picture_library')
    implementation project(':oss-android-sdk')
    implementation project(':ucrop')
    implementation project(':pickerview')
    implementation project(':wheelview')
    implementation project(':silicompressor')
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.alibaba.android:ultraviewpager:1.0.7.7'
    implementation 'com.tencent:mmkv:1.0.10'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.9.15'
    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'
    //添加 Sensors Analytics SDK 依赖
    implementation 'com.sensorsdata.analytics.android:SensorsAnalyticsSDK:2.0.3@aar'
    implementation 'com.github.hackware1993:MagicIndicator:1.5.0'
    implementation 'com.tencent.bugly:crashreport_upgrade:1.3.6'
    // 指定tinker依赖版本（注：应用升级1.3.5版本起，不再内置tinker）
    implementation 'com.tencent.tinker:tinker-android-lib:1.9.9'
    implementation 'org.litepal.android:java:3.0.0'

    //圆角图片
    implementation 'jp.wasabeef:glide-transformations:2.0.2'
}