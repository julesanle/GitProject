apply plugin: 'com.android.application'
//添加 com.sensorsdata.analytics.android 插件
//apply plugin: 'com.sensorsdata.analytics.android'
//apply from: 'tinker-support.gradle'

android {
lintOptions {
abortOnError false
}
    compileSdkVersion cfgs.compileSdkVersion
    defaultConfig {

        signingConfigs {
        debug {
                   
               }
        
            release{
                storeFile file("android.keystore")
                storePassword "yanxiusrt1qaz@wsx"
                keyAlias "zuoyebaoandroid.keystore"
                keyPassword "yanxiusrt1qaz@wsx"
                }
        }



buildTypes {
        debug {
            
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            //
            manifestPlaceholders = [
                GETUI_APP_ID    : "VKUOZXhFCB7GevG6yfQXE1", //APP_ID
                GETUI_APP_KEY   : "xSFRKbsdKmALW38Bvvx0U6",   //APP_KEY
                GETUI_APP_SECRET: "ulxmindW6P7FjCx0xhVSz1",   //APPSECRET
            ]

        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
                    minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            
            manifestPlaceholders = [
                //realse
                GETUI_APP_ID    : "xy6JNNaUzP66bUOgoTqom", //APP_ID
                GETUI_APP_KEY   : "oMgcaCRKRp8secHbF5zveA",   //APP_KEY
                GETUI_APP_SECRET: "tstl2Ge5Rw76WzOL0vxWz2",   //APPSECRET
            ]


                    applicationVariants.all { variant ->
                        variant.outputs.each { output ->def outputFile= output.outputFile
                            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                               
                                        def fileName="sanrenxing_xuesheng_${versionName}-${variant.productFlavors[0].name}.apk"
                                output.outputFile =new File(outputFile.parent, fileName)
                                }
                            }
                        }
            }
    }

productFlavors {
shoujizhushou360{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "shoujizhushou360"]
}
wandoujia{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "wandoujia"]
}
xiaomi{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "xiaomi"]
}
huaweihuizhi{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "huaweihuizhi"]
}
lenovomm{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "lenovomm"]
}
txyingyongbao{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "txyingyongbao"]
}
vivo{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "vivo"]
}
oppo{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "oppo"]
}
others{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "others"]
}
baidushoujizhushou{
 manifestPlaceholders = [INSTALL_CHANNEL_VALUE: "baidushoujizhushou"]
}

}
productFlavors.all { flavor ->
      flavor.manifestPlaceholders = [INSTALL_CHANNEL_VALUE: name]
  }

      /*  splits {

            abi {
                enable true reset() include 'x86', 'armeabi-v7a', 'x86_64'
                universalApk true

            }
        }*/



        applicationId "com.yanxiu.ruixuetang"
        minSdkVersion cfgs.minSdkVersion
        targetSdkVersion cfgs.targetSdkVersion

        versionCode 30
        versionName "1.3.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86_64", "x86"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // bugly recommend
    dexOptions {
        jumboMode = true
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }


